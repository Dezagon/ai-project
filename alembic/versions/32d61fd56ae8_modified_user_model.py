"""modified user model

Revision ID: 32d61fd56ae8
Revises: 0e19d5cbebf1
Create Date: 2025-10-03 11:03:16.957765

"""
from typing import Sequence

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '32d61fd56ae8'
down_revision: str | Sequence[str] | None = '0e19d5cbebf1'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('token')
    op.drop_table('tokendata')
    op.add_column('user', sa.Column('weight', sa.Integer(), nullable=True))
    op.add_column('user', sa.Column('activity_level', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.alter_column('user', 'protein_goal',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('user', 'carb_goal',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('user', 'fat_goal',
               existing_type=sa.INTEGER(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'fat_goal',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('user', 'carb_goal',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('user', 'protein_goal',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('user', 'activity_level')
    op.drop_column('user', 'weight')
    op.create_table('tokendata',
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.create_table('token',
    sa.Column('access_token', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('bearer', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('access_token', name=op.f('token_pkey'))
    )
    # ### end Alembic commands ###
